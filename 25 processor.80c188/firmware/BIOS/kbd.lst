Module: /mnt/fileserver/Vintage/Projects/duodyne/25 processor.80c188/firmware/BIOS/kbd.c
GROUP: 'DGROUP' CONST,CONST2,_DATA

File contains no line numbers.
Segment: _TEXT BYTE USE16 00000391 bytes
0000                          PurgeQueue_:
0000    53                        push        bx 
0001    52                        push        dx 
0002    BB FF FF                  mov         bx,0xffff 
0005    BA 00 01                  mov         dx,0x0100 
0008    EB 03                     jmp         L$2 
000A                          L$1:
000A    4A                        dec         dx 
000B    74 0F                     je          L$3 
000D                          L$2:
000D    E8 00 00                  call        I8242GetValue_ 
0010    3D FF FF                  cmp         ax,0xffff 
0013    74 F5                     je          L$1 
0015    BA 00 01                  mov         dx,0x0100 
0018    89 C3                     mov         bx,ax 
001A    EB EE                     jmp         L$1 
001C                          L$3:
001C    89 D8                     mov         ax,bx 
001E    5A                        pop         dx 
001F    5B                        pop         bx 
0020    C3                        ret         

Routine Size: 33 bytes,    Routine Base: _TEXT + 0000

0021                          Init8242_:
0021    53                        push        bx 
0022    B8 A7 00                  mov         ax,0x00a7 
0025    E8 00 00                  call        I8242CommandPut_ 
0028    B8 AE 00                  mov         ax,0x00ae 
002B    E8 00 00                  call        I8242CommandPut_ 
002E    E8 00 00                  call        PurgeQueue_ 
0031    B8 AA 00                  mov         ax,0x00aa 
0034    E8 00 00                  call        I8242CommandPut_ 
0037                          L$4:
0037    E8 00 00                  call        I8242GetValue_ 
003A    3D 55 00                  cmp         ax,0x0055 
003D    75 F8                     jne         L$4 
003F    B8 20 00                  mov         ax,0x0020 
0042    E8 00 00                  call        I8242CommandPut_ 
0045    E8 00 00                  call        PurgeQueue_ 
0048    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
004C    26 C7 47 17 20 00         mov         word ptr es:0x17[bx],0x0020 
0052    E8 00 00                  call        I8242UpdateLites_ 
0055    5B                        pop         bx 
0056    C3                        ret         

Routine Size: 54 bytes,    Routine Base: _TEXT + 0021

0057                          I8242PutKeyboard_:
0057    53                        push        bx 
0058    52                        push        dx 
0059    88 C3                     mov         bl,al 
005B    BA 4D 04                  mov         dx,0x044d 
005E                          L$5:
005E    EC                        in          al,dx 
005F    2A E4                     sub         ah,ah 
0061    A8 02                     test        al,0x02 
0063    75 F9                     jne         L$5 
0065    88 D8                     mov         al,bl 
0067    BA 4C 04                  mov         dx,0x044c 
006A    EE                        out         dx,al 
006B                          L$6:
006B    E8 00 00                  call        I8242GetValue_ 
006E    3D FF FF                  cmp         ax,0xffff 
0071    74 F8                     je          L$6 
0073    5A                        pop         dx 
0074    5B                        pop         bx 
0075    C3                        ret         

Routine Size: 31 bytes,    Routine Base: _TEXT + 0057

0076                          I8242UpdateLites_:
0076    53                        push        bx 
0077    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
007B    26 8B 5F 17               mov         bx,word ptr es:0x17[bx] 
007F    C1 EB 04                  shr         bx,0x04 
0082    B8 AD 00                  mov         ax,0x00ad 
0085    E8 00 00                  call        I8242CommandPut_ 
0088    B8 ED 00                  mov         ax,0x00ed 
008B    E8 00 00                  call        I8242PutKeyboard_ 
008E    88 D8                     mov         al,bl 
0090    24 07                     and         al,0x07 
0092    30 E4                     xor         ah,ah 
0094    E8 00 00                  call        I8242PutKeyboard_ 
0097    B8 AE 00                  mov         ax,0x00ae 
009A    E8 00 00                  call        I8242CommandPut_ 
009D    E8 00 00                  call        PurgeQueue_ 
00A0    5B                        pop         bx 
00A1    C3                        ret         
00A2                          L$7:
00A2    40 01                                           DW	offset L$17
00A4    24 01                                           DW	offset L$14
00A6    09 01                                           DW	offset L$12
00A8    FF 01                                           DW	offset L$30
00AA    D1 01                                           DW	offset L$27
00AC    4B 02                                           DW	offset L$37
00AE    1C 02                                           DW	offset L$32
00B0    7B 01                                           DW	offset L$23
00B2    A6 01                                           DW	offset L$25

Routine Size: 62 bytes,    Routine Base: _TEXT + 0076

00B4                          @I8242process:
00B4    88 C2                     mov         dl,al 
00B6    3C E0                     cmp         al,0xe0 
00B8    75 0C                     jne         L$8 
00BA    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
00BE    26 80 4F 19 01            or          byte ptr es:0x19[bx],0x01 
00C3    31 C0                     xor         ax,ax 
00C5    C3                        ret         
00C6                          L$8:
00C6    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
00CA    24 7F                     and         al,0x7f 
00CC    26 F6 47 17 03            test        byte ptr es:0x17[bx],0x03 
00D1    74 0A                     je          L$9 
00D3    88 C3                     mov         bl,al 
00D5    30 FF                     xor         bh,bh 
00D7    8A 87 00 00               mov         al,byte ptr _trans_shifted[bx] 
00DB    EB 08                     jmp         L$10 
00DD                          L$9:
00DD    88 C3                     mov         bl,al 
00DF    30 FF                     xor         bh,bh 
00E1    8A 87 00 00               mov         al,byte ptr _trans_no_shift[bx] 
00E5                          L$10:
00E5    30 E4                     xor         ah,ah 
00E7    3D 84 00                  cmp         ax,0x0084 
00EA    76 64                     jbe         L$18 
00EC    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
00F0    26 F6 47 19 01            test        byte ptr es:0x19[bx],0x01 
00F5    74 01                     je          L$11 
00F7    40                        inc         ax 
00F8                          L$11:
00F8    2D 85 00                  sub         ax,0x0085 
00FB    3D 08 00                  cmp         ax,0x0008 
00FE    77 3D                     ja          L$16 
0100    89 C3                     mov         bx,ax 
0102    D1 E3                     shl         bx,0x01 
0104    2E FF A7 A2 00            jmp         word ptr cs:L$7[bx] 
0109                          L$12:
0109    F6 C2 80                  test        dl,0x80 
010C    74 0B                     je          L$13 
010E    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0112    26 80 67 17 FE            and         byte ptr es:0x17[bx],0xfe 
0117    EB 24                     jmp         L$16 
0119                          L$13:
0119    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
011D    26 80 4F 17 01            or          byte ptr es:0x17[bx],0x01 
0122    EB 19                     jmp         L$16 
0124                          L$14:
0124    F6 C2 80                  test        dl,0x80 
0127    74 0B                     je          L$15 
0129    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
012D    26 80 67 17 FD            and         byte ptr es:0x17[bx],0xfd 
0132    EB 09                     jmp         L$16 
0134                          L$15:
0134    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0138    26 80 4F 17 02            or          byte ptr es:0x17[bx],0x02 
013D                          L$16:
013D    E9 2F 00                  jmp         L$21 
0140                          L$17:
0140    F6 C2 80                  test        dl,0x80 
0143    74 0E                     je          L$19 
0145    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0149    26 80 67 18 BF            and         byte ptr es:0x18[bx],0xbf 
014E    EB 1C                     jmp         L$20 
0150                          L$18:
0150    E9 14 01                  jmp         L$39 
0153                          L$19:
0153    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0157    26 F6 47 18 40            test        byte ptr es:0x18[bx],0x40 
015C    75 0E                     jne         L$20 
015E    26 80 4F 18 40            or          byte ptr es:0x18[bx],0x40 
0163    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0167    26 80 77 17 40            xor         byte ptr es:0x17[bx],0x40 
016C                          L$20:
016C    E8 00 00                  call        I8242UpdateLites_ 
016F                          L$21:
016F    31 C0                     xor         ax,ax 
0171                          L$22:
0171    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0175    26 80 67 19 FE            and         byte ptr es:0x19[bx],0xfe 
017A    C3                        ret         
017B                          L$23:
017B    F6 C2 80                  test        dl,0x80 
017E    74 0B                     je          L$24 
0180    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0184    26 80 67 18 DF            and         byte ptr es:0x18[bx],0xdf 
0189    EB E1                     jmp         L$20 
018B                          L$24:
018B    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
018F    26 F6 47 18 20            test        byte ptr es:0x18[bx],0x20 
0194    75 D6                     jne         L$20 
0196    26 80 4F 18 20            or          byte ptr es:0x18[bx],0x20 
019B    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
019F    26 80 77 17 20            xor         byte ptr es:0x17[bx],0x20 
01A4    EB C6                     jmp         L$20 
01A6                          L$25:
01A6    F6 C2 80                  test        dl,0x80 
01A9    74 0B                     je          L$26 
01AB    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01AF    26 80 67 18 EF            and         byte ptr es:0x18[bx],0xef 
01B4    EB B6                     jmp         L$20 
01B6                          L$26:
01B6    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01BA    26 F6 47 18 10            test        byte ptr es:0x18[bx],0x10 
01BF    75 AB                     jne         L$20 
01C1    26 80 4F 18 10            or          byte ptr es:0x18[bx],0x10 
01C6    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01CA    26 80 77 17 10            xor         byte ptr es:0x17[bx],0x10 
01CF    EB 9B                     jmp         L$20 
01D1                          L$27:
01D1    F6 C2 80                  test        dl,0x80 
01D4    74 1C                     je          L$29 
01D6    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01DA    26 80 67 18 FB            and         byte ptr es:0x18[bx],0xfb 
01DF                          L$28:
01DF    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01E3    26 F6 47 18 05            test        byte ptr es:0x18[bx],0x05 
01E8    75 85                     jne         L$21 
01EA    26 80 67 17 FB            and         byte ptr es:0x17[bx],0xfb 
01EF    E9 7D FF                  jmp         L$21 
01F2                          L$29:
01F2    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
01F6    26 81 4F 17 04 04         or          word ptr es:0x17[bx],0x0404 
01FC    E9 70 FF                  jmp         L$21 
01FF                          L$30:
01FF    F6 C2 80                  test        dl,0x80 
0202    74 0B                     je          L$31 
0204    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0208    26 80 67 18 FE            and         byte ptr es:0x18[bx],0xfe 
020D    EB D0                     jmp         L$28 
020F                          L$31:
020F    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0213    26 81 4F 17 04 01         or          word ptr es:0x17[bx],0x0104 
0219    E9 53 FF                  jmp         L$21 
021C                          L$32:
021C    F6 C2 80                  test        dl,0x80 
021F    74 1E                     je          L$36 
0221    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0225    26 80 67 18 F7            and         byte ptr es:0x18[bx],0xf7 
022A                          L$33:
022A    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
022E    26 F6 47 18 0A            test        byte ptr es:0x18[bx],0x0a 
0233    74 03                     je          L$35 
0235                          L$34:
0235    E9 37 FF                  jmp         L$21 
0238                          L$35:
0238    26 80 67 17 F7            and         byte ptr es:0x17[bx],0xf7 
023D    EB F6                     jmp         L$34 
023F                          L$36:
023F    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0243    26 81 4F 17 08 08         or          word ptr es:0x17[bx],0x0808 
0249    EB EA                     jmp         L$34 
024B                          L$37:
024B    F6 C2 80                  test        dl,0x80 
024E    74 0B                     je          L$38 
0250    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0254    26 80 67 18 FD            and         byte ptr es:0x18[bx],0xfd 
0259    EB CF                     jmp         L$33 
025B                          L$38:
025B    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
025F    26 81 4F 17 08 02         or          word ptr es:0x17[bx],0x0208 
0265    EB CE                     jmp         L$34 
0267                          L$39:
0267    3D 82 00                  cmp         ax,0x0082 
026A    75 35                     jne         L$43 
026C    F6 C2 80                  test        dl,0x80 
026F    75 30                     jne         L$43 
0271    30 F6                     xor         dh,dh 
0273    89 D0                     mov         ax,dx 
0275    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0279    26 F6 47 17 08            test        byte ptr es:0x17[bx],0x08 
027E    74 05                     je          L$40 
0280    05 2D 00                  add         ax,0x002d 
0283    EB 16                     jmp         L$42 
0285                          L$40:
0285    26 F6 47 17 04            test        byte ptr es:0x17[bx],0x04 
028A    74 05                     je          L$41 
028C    05 23 00                  add         ax,0x0023 
028F    EB 0A                     jmp         L$42 
0291                          L$41:
0291    26 F6 47 17 03            test        byte ptr es:0x17[bx],0x03 
0296    74 03                     je          L$42 
0298    05 19 00                  add         ax,0x0019 
029B                          L$42:
029B    C1 E0 08                  shl         ax,0x08 
029E    E9 D0 FE                  jmp         L$22 
02A1                          L$43:
02A1    3D 83 00                  cmp         ax,0x0083 
02A4    75 33                     jne         L$46 
02A6    F6 C2 80                  test        dl,0x80 
02A9    75 2E                     jne         L$46 
02AB    88 D0                     mov         al,dl 
02AD    30 E4                     xor         ah,ah 
02AF    05 2E 00                  add         ax,0x002e 
02B2    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
02B6    26 F6 47 17 08            test        byte ptr es:0x17[bx],0x08 
02BB    74 05                     je          L$44 
02BD    05 06 00                  add         ax,0x0006 
02C0    EB D9                     jmp         L$42 
02C2                          L$44:
02C2    26 F6 47 17 04            test        byte ptr es:0x17[bx],0x04 
02C7    74 05                     je          L$45 
02C9    05 04 00                  add         ax,0x0004 
02CC    EB CD                     jmp         L$42 
02CE                          L$45:
02CE    26 F6 47 17 03            test        byte ptr es:0x17[bx],0x03 
02D3    74 C6                     je          L$42 
02D5    40                        inc         ax 
02D6    40                        inc         ax 
02D7    EB C2                     jmp         L$42 
02D9                          L$46:
02D9    3D 81 00                  cmp         ax,0x0081 
02DC    75 3A                     jne         L$51 
02DE    F6 C2 80                  test        dl,0x80 
02E1    75 35                     jne         L$51 
02E3    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
02E7    26 F6 47 17 20            test        byte ptr es:0x17[bx],0x20 
02EC    74 05                     je          L$47 
02EE    B8 01 00                  mov         ax,0x0001 
02F1    EB 02                     jmp         L$48 
02F3                          L$47:
02F3    31 C0                     xor         ax,ax 
02F5                          L$48:
02F5    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
02F9    26 F6 47 17 03            test        byte ptr es:0x17[bx],0x03 
02FE    74 05                     je          L$49 
0300    BB 01 00                  mov         bx,0x0001 
0303    EB 02                     jmp         L$50 
0305                          L$49:
0305    31 DB                     xor         bx,bx 
0307                          L$50:
0307    31 D8                     xor         ax,bx 
0309    74 0F                     je          L$52 
030B    88 D3                     mov         bl,dl 
030D    83 E3 7F                  and         bx,0x007f 
0310    8A 87 B9 FF               mov         al,byte ptr _keypad_numlock-0x47[bx] 
0314    30 E4                     xor         ah,ah 
0316    EB 10                     jmp         L$53 
0318                          L$51:
0318    EB 33                     jmp         L$56 
031A                          L$52:
031A    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
031E    26 F6 47 19 01            test        byte ptr es:0x19[bx],0x01 
0323    74 03                     je          L$53 
0325    B8 E0 00                  mov         ax,0x00e0 
0328                          L$53:
0328    88 D3                     mov         bl,dl 
032A    30 FF                     xor         bh,bh 
032C    C1 E3 08                  shl         bx,0x08 
032F    09 D8                     or          ax,bx 
0331    80 FA 53                  cmp         dl,0x53 
0334    74 03                     je          L$55 
0336                          L$54:
0336    E9 38 FE                  jmp         L$22 
0339                          L$55:
0339    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
033D    26 8B 57 17               mov         dx,word ptr es:0x17[bx] 
0341    F7 D2                     not         dx 
0343    F6 C2 0C                  test        dl,0x0c 
0346    75 EE                     jne         L$54 
0348    B8 34 12                  mov         ax,0x1234 
034B    EB E9                     jmp         L$54 
034D                          L$56:
034D    85 C0                     test        ax,ax 
034F    75 03                     jne         L$58 
0351                          L$57:
0351    E9 1B FE                  jmp         L$21 
0354                          L$58:
0354    F6 C2 80                  test        dl,0x80 
0357    75 F8                     jne         L$57 
0359    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
035D    26 F6 47 17 40            test        byte ptr es:0x17[bx],0x40 
0362    74 16                     je          L$61 
0364    3D 41 00                  cmp         ax,0x0041 
0367    72 05                     jb          L$59 
0369    3D 5A 00                  cmp         ax,0x005a 
036C    76 0A                     jbe         L$60 
036E                          L$59:
036E    3D 61 00                  cmp         ax,0x0061 
0371    72 07                     jb          L$61 
0373    3D 7A 00                  cmp         ax,0x007a 
0376    77 02                     ja          L$61 
0378                          L$60:
0378    34 20                     xor         al,0x20 
037A                          L$61:
037A    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
037E    26 F6 47 17 04            test        byte ptr es:0x17[bx],0x04 
0383    74 03                     je          L$62 
0385    25 1F 00                  and         ax,0x001f 
0388                          L$62:
0388    30 F6                     xor         dh,dh 
038A    C1 E2 08                  shl         dx,0x08 
038D    09 D0                     or          ax,dx 
038F    EB A5                     jmp         L$54 

Routine Size: 733 bytes,    Routine Base: _TEXT + 00B4

No disassembly errors

Segment: CONST WORD USE16 00000000 bytes

Segment: CONST2 WORD USE16 0000011A bytes
0000                          _trans_no_shift:
0000    00 1B 31 32 33 34 35 36 37 38 39 30 2D 3D 08 09 ..1234567890-=..
0010    71 77 65 72 74 79 75 69 6F 70 5B 5D 0D 88 61 73 qwertyuiop[]..as
0020    64 66 67 68 6A 6B 6C 3B 27 60 86 5C 7A 78 63 76 dfghjkl;'`.\zxcv
0030    62 6E 6D 2C 2E 2F 87 2A 8A 20 85 82 82 82 82 82 bnm,./.*. ......
0040    82 82 82 82 82 8C 8D 81 81 81 2D 81 81 81 2B 81 ..........-...+.
0050    81 81 81 81 00 00 00 83 83 00 00 00 00 00 00 00 ................
0060    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
0070    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
0080                          _trans_shifted:
0080    00 1B 21 40 23 24 25 5E 26 2A 28 29 5F 2B 08 09 ..!@#$%^&*()_+..
0090    51 57 45 52 54 59 55 49 4F 50 7B 7D 0D 88 41 53 QWERTYUIOP{}..AS
00A0    44 46 47 48 4A 4B 4C 3A 22 7E 86 7C 5A 58 43 56 DFGHJKL:"~.|ZXCV
00B0    42 4E 4D 3C 3E 3F 87 2A 8A 20 85 82 82 82 82 82 BNM<>?.*. ......
00C0    82 82 82 82 82 8C 8D 81 81 81 2D 81 81 81 2B 81 ..........-...+.
00D0    81 81 81 81 00 00 00 83 83 00 00 00 00 00 00 00 ................
00E0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
00F0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
0100                          _keypad_numlock:
0100    37 38 39 2D 34 35 36 2B 31 32 33 30 2E          789-456+1230.
010D                          _keypad_ctrl:
010D    77 00 84 00 73 00 74 00 75 00 76 00 00          w...s.t.u.v..

Segment: _DATA WORD USE16 00000000 bytes

