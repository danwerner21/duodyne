Module: /mnt/fileserver/Vintage/Projects/duodyne/25 processor.80c188/firmware/BIOS/cprintf.c
GROUP: 'DGROUP' CONST,CONST2,_DATA

File contains no line numbers.
Segment: _TEXT BYTE USE16 00000342 bytes
0000                          nstring_:
0000    3C 0A                     cmp         al,0x0a 
0002    73 03                     jae         L$1 
0004    04 30                     add         al,0x30 
0006    C3                        ret         
0007                          L$1:
0007    04 37                     add         al,0x37 
0009    C3                        ret         
000A                          L$2:
000A    20 1D 1B 17 0C 0B 09 00                          .......
0012                          L$3:
0012    72 00                                           DW	offset L$6
0014    6E 01                                           DW	offset L$20
0016    92 02                                           DW	offset L$43
0018    7F 02                                           DW	offset L$42
001A    82 01                                           DW	offset L$24
001C    76 01                                           DW	offset L$21
001E    DD 01                                           DW	offset L$32
0020    7D 01                                           DW	offset L$23
0022    6E 01                                           DW	offset L$20
0024                          L$4:
0024    A3 01                                           DW	offset L$26
0026    A3 01                                           DW	offset L$26
0028    AF 01                                           DW	offset L$27
002A    C9 01                                           DW	offset L$29
002C    BE 01                                           DW	offset L$28
002E    BE 01                                           DW	offset L$28
0030    AF 01                                           DW	offset L$27

Routine Size: 50 bytes,    Routine Base: _TEXT + 0000

0032                          _cprintf:
0032    56                        push        si 
0033    57                        push        di 
0034    C8 1C 00 00               enter       0x001c,0x00 
0038    C7 46 F4 00 00            mov         word ptr -0xc[bp],0x0000 
003D    C6 46 FC 07               mov         byte ptr -0x4[bp],0x07 
0041    8D 5E 0C                  lea         bx,0xc[bp] 
0044    89 5E F0                  mov         word ptr -0x10[bp],bx 
0047    8C 56 F2                  mov         word ptr -0xe[bp],ss 
004A                          L$5:
004A    C4 5E 08                  les         bx,dword ptr 0x8[bp] 
004D    FF 46 08                  inc         word ptr 0x8[bp] 
0050    26 8A 17                  mov         dl,byte ptr es:[bx] 
0053    30 F6                     xor         dh,dh 
0055    89 56 F6                  mov         word ptr -0xa[bp],dx 
0058    85 D2                     test        dx,dx 
005A    74 6C                     je          L$11 
005C    FF 46 F4                  inc         word ptr -0xc[bp] 
005F    83 FA 25                  cmp         dx,0x0025 
0062    74 1D                     je          L$8 
0064    83 FA 0A                  cmp         dx,0x000a 
0067    75 09                     jne         L$6 
0069    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
006C    B8 0D 00                  mov         ax,0x000d 
006F    E8 00 00                  call        @VIDEO_putchar 
0072                          L$6:
0072    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
0075    30 F6                     xor         dh,dh 
0077    8A 46 F6                  mov         al,byte ptr -0xa[bp] 
007A                          L$7:
007A    30 E4                     xor         ah,ah 
007C    E8 00 00                  call        @VIDEO_putchar 
007F    EB C9                     jmp         L$5 
0081                          L$8:
0081    BA 01 00                  mov         dx,0x0001 
0084    8B 5E 08                  mov         bx,word ptr 0x8[bp] 
0087    26 8A 07                  mov         al,byte ptr es:[bx] 
008A    88 46 FE                  mov         byte ptr -0x2[bp],al 
008D    31 C0                     xor         ax,ax 
008F    89 46 F8                  mov         word ptr -0x8[bp],ax 
0092    89 46 FA                  mov         word ptr -0x6[bp],ax 
0095    80 7E FE 2D               cmp         byte ptr -0x2[bp],0x2d 
0099    75 03                     jne         L$9 
009B    01 56 08                  add         word ptr 0x8[bp],dx 
009E                          L$9:
009E    8E 46 0A                  mov         es,word ptr 0xa[bp] 
00A1                          L$10:
00A1    8B 5E 08                  mov         bx,word ptr 0x8[bp] 
00A4    FF 46 08                  inc         word ptr 0x8[bp] 
00A7    26 8A 07                  mov         al,byte ptr es:[bx] 
00AA    30 E4                     xor         ah,ah 
00AC    89 46 F6                  mov         word ptr -0xa[bp],ax 
00AF    3D 30 00                  cmp         ax,0x0030 
00B2    7C 17                     jl          L$12 
00B4    3D 39 00                  cmp         ax,0x0039 
00B7    7F 12                     jg          L$12 
00B9    6B 5E F8 0A               imul        bx,word ptr -0x8[bp],0x000a 
00BD    89 5E F8                  mov         word ptr -0x8[bp],bx 
00C0    2D 30 00                  sub         ax,0x0030 
00C3    01 46 F8                  add         word ptr -0x8[bp],ax 
00C6    EB D9                     jmp         L$10 
00C8                          L$11:
00C8    E9 E7 01                  jmp         L$46 
00CB                          L$12:
00CB    83 7E F6 2E               cmp         word ptr -0xa[bp],0x002e 
00CF    75 2A                     jne         L$14 
00D1    8E 46 0A                  mov         es,word ptr 0xa[bp] 
00D4                          L$13:
00D4    8B 5E 08                  mov         bx,word ptr 0x8[bp] 
00D7    FF 46 08                  inc         word ptr 0x8[bp] 
00DA    26 8A 07                  mov         al,byte ptr es:[bx] 
00DD    30 E4                     xor         ah,ah 
00DF    89 46 F6                  mov         word ptr -0xa[bp],ax 
00E2    3D 30 00                  cmp         ax,0x0030 
00E5    7C 14                     jl          L$14 
00E7    3D 39 00                  cmp         ax,0x0039 
00EA    7F 0F                     jg          L$14 
00EC    6B 5E FA 0A               imul        bx,word ptr -0x6[bp],0x000a 
00F0    89 5E FA                  mov         word ptr -0x6[bp],bx 
00F3    2D 30 00                  sub         ax,0x0030 
00F6    01 46 FA                  add         word ptr -0x6[bp],ax 
00F9    EB D9                     jmp         L$13 
00FB                          L$14:
00FB    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
00FE    3C 2D                     cmp         al,0x2d 
0100    75 05                     jne         L$15 
0102    F7 5E F8                  neg         word ptr -0x8[bp] 
0105    EB 08                     jmp         L$16 
0107                          L$15:
0107    3C 30                     cmp         al,0x30 
0109    74 04                     je          L$16 
010B    C6 46 FE 20               mov         byte ptr -0x2[bp],0x20 
010F                          L$16:
010F    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
0112    85 C0                     test        ax,ax 
0114    74 B2                     je          L$11 
0116    8B 76 08                  mov         si,word ptr 0x8[bp] 
0119    46                        inc         si 
011A    3D 68 00                  cmp         ax,0x0068 
011D    75 12                     jne         L$17 
011F    C4 5E 08                  les         bx,dword ptr 0x8[bp] 
0122    89 76 08                  mov         word ptr 0x8[bp],si 
0125    26 8A 07                  mov         al,byte ptr es:[bx] 
0128    30 E4                     xor         ah,ah 
012A    89 46 F6                  mov         word ptr -0xa[bp],ax 
012D    31 D2                     xor         dx,dx 
012F    EB 16                     jmp         L$18 
0131                          L$17:
0131    3D 6C 00                  cmp         ax,0x006c 
0134    75 11                     jne         L$18 
0136    C4 5E 08                  les         bx,dword ptr 0x8[bp] 
0139    89 76 08                  mov         word ptr 0x8[bp],si 
013C    26 8A 07                  mov         al,byte ptr es:[bx] 
013F    30 E4                     xor         ah,ah 
0141    89 46 F6                  mov         word ptr -0xa[bp],ax 
0144    BA 02 00                  mov         dx,0x0002 
0147                          L$18:
0147    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
014A    2D 58 00                  sub         ax,0x0058 
014D    3D 20 00                  cmp         ax,0x0020 
0150    76 03                     jbe         L$19 
0152    E9 1D FF                  jmp         L$6 
0155                          L$19:
0155    0E                        push        cs 
0156    07                        pop         es 
0157    B9 09 00                  mov         cx,0x0009 
015A    BF 0A 00                  mov         di,offset L$2 
015D    F2 AE                     repne scasb 
015F    D1 E1                     shl         cx,0x01 
0161    89 CF                     mov         di,cx 
0163    2E 8B 9D 12 00            mov         bx,word ptr cs:L$3[di] 
0168    89 D0                     mov         ax,dx 
016A    0C 04                     or          al,0x04 
016C    FF E3                     jmp         bx 
016E                          L$20:
016E    B9 10 00                  mov         cx,0x0010 
0171    80 CA 04                  or          dl,0x04 
0174    EB 0F                     jmp         L$25 
0176                          L$21:
0176    B9 08 00                  mov         cx,0x0008 
0179                          L$22:
0179    89 C2                     mov         dx,ax 
017B    EB 08                     jmp         L$25 
017D                          L$23:
017D    B9 0A 00                  mov         cx,0x000a 
0180    EB F7                     jmp         L$22 
0182                          L$24:
0182    B9 F6 FF                  mov         cx,0xfff6 
0185                          L$25:
0185    83 FA 06                  cmp         dx,0x0006 
0188    77 3F                     ja          L$29 
018A    89 D7                     mov         di,dx 
018C    D1 E7                     shl         di,0x01 
018E    8B 46 F2                  mov         ax,word ptr -0xe[bp] 
0191    8B 5E F0                  mov         bx,word ptr -0x10[bp] 
0194    43                        inc         bx 
0195    43                        inc         bx 
0196    89 C2                     mov         dx,ax 
0198    8B 76 F0                  mov         si,word ptr -0x10[bp] 
019B    83 C6 04                  add         si,0x0004 
019E    2E FF A5 24 00            jmp         word ptr cs:L$4[di] 
01A3                          L$26:
01A3    89 5E F0                  mov         word ptr -0x10[bp],bx 
01A6    8E C0                     mov         es,ax 
01A8    26 8B 47 FE               mov         ax,word ptr es:-0x2[bx] 
01AC    99                        cwd         
01AD    EB 1E                     jmp         L$31 
01AF                          L$27:
01AF    89 76 F0                  mov         word ptr -0x10[bp],si 
01B2    8E C0                     mov         es,ax 
01B4    26 8B 44 FC               mov         ax,word ptr es:-0x4[si] 
01B8    26 8B 54 FE               mov         dx,word ptr es:-0x2[si] 
01BC    EB 0F                     jmp         L$31 
01BE                          L$28:
01BE    89 5E F0                  mov         word ptr -0x10[bp],bx 
01C1    8E C0                     mov         es,ax 
01C3    26 8B 47 FE               mov         ax,word ptr es:-0x2[bx] 
01C7    EB 02                     jmp         L$30 
01C9                          L$29:
01C9    31 C0                     xor         ax,ax 
01CB                          L$30:
01CB    31 D2                     xor         dx,dx 
01CD                          L$31:
01CD    8D 76 E4                  lea         si,-0x1c[bp] 
01D0    16                        push        ss 
01D1    56                        push        si 
01D2    89 CB                     mov         bx,cx 
01D4    E8 00 00                  call        __numout_ 
01D7    89 C6                     mov         si,ax 
01D9    89 D7                     mov         di,dx 
01DB    EB 12                     jmp         L$33 
01DD                          L$32:
01DD    83 46 F0 04               add         word ptr -0x10[bp],0x0004 
01E1    C4 76 F0                  les         si,dword ptr -0x10[bp] 
01E4    26 8B 74 FC               mov         si,word ptr es:-0x4[si] 
01E8    8B 7E F0                  mov         di,word ptr -0x10[bp] 
01EB    26 8B 7D FE               mov         di,word ptr es:-0x2[di] 
01EF                          L$33:
01EF    FF 4E F4                  dec         word ptr -0xc[bp] 
01F2    89 F0                     mov         ax,si 
01F4    89 FA                     mov         dx,di 
01F6    E8 00 00                  call        strlen_ 
01F9    89 46 F6                  mov         word ptr -0xa[bp],ax 
01FC    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
0200    75 03                     jne         L$34 
0202    89 46 FA                  mov         word ptr -0x6[bp],ax 
0205                          L$34:
0205    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
0208    85 C0                     test        ax,ax 
020A    7E 28                     jle         L$37 
020C    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
020F    29 46 F8                  sub         word ptr -0x8[bp],ax 
0212                          L$35:
0212    83 7E F8 00               cmp         word ptr -0x8[bp],0x0000 
0216    7E 15                     jle         L$36 
0218    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
021B    30 F6                     xor         dh,dh 
021D    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
0220    30 E4                     xor         ah,ah 
0222    E8 00 00                  call        @VIDEO_putchar 
0225    FF 46 F4                  inc         word ptr -0xc[bp] 
0228    FF 4E F8                  dec         word ptr -0x8[bp] 
022B    EB E5                     jmp         L$35 
022D                          L$36:
022D    C7 46 F8 00 00            mov         word ptr -0x8[bp],0x0000 
0232    EB 0A                     jmp         L$38 
0234                          L$37:
0234    7D 08                     jge         L$38 
0236    F7 D8                     neg         ax 
0238    2B 46 F6                  sub         ax,word ptr -0xa[bp] 
023B    89 46 F8                  mov         word ptr -0x8[bp],ax 
023E                          L$38:
023E    8E C7                     mov         es,di 
0240    26 80 3C 00               cmp         byte ptr es:[si],0x00 
0244    74 1D                     je          L$39 
0246    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
0249    FF 4E FA                  dec         word ptr -0x6[bp] 
024C    85 C0                     test        ax,ax 
024E    7E 13                     jle         L$39 
0250    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
0253    30 F6                     xor         dh,dh 
0255    26 8A 04                  mov         al,byte ptr es:[si] 
0258    30 E4                     xor         ah,ah 
025A    46                        inc         si 
025B    E8 00 00                  call        @VIDEO_putchar 
025E    FF 46 F4                  inc         word ptr -0xc[bp] 
0261    EB DB                     jmp         L$38 
0263                          L$39:
0263    83 7E F8 00               cmp         word ptr -0x8[bp],0x0000 
0267    7F 03                     jg          L$41 
0269                          L$40:
0269    E9 DE FD                  jmp         L$5 
026C                          L$41:
026C    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
026F    30 F6                     xor         dh,dh 
0271    B8 20 00                  mov         ax,0x0020 
0274    E8 00 00                  call        @VIDEO_putchar 
0277    FF 46 F4                  inc         word ptr -0xc[bp] 
027A    FF 4E F8                  dec         word ptr -0x8[bp] 
027D    EB E4                     jmp         L$39 
027F                          L$42:
027F    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
0282    30 F6                     xor         dh,dh 
0284    83 46 F0 02               add         word ptr -0x10[bp],0x0002 
0288    C4 5E F0                  les         bx,dword ptr -0x10[bp] 
028B    26 8A 47 FE               mov         al,byte ptr es:-0x2[bx] 
028F    E9 E8 FD                  jmp         L$7 
0292                          L$43:
0292    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
0295    85 C0                     test        ax,ax 
0297    75 06                     jne         L$44 
0299    C6 46 FC 07               mov         byte ptr -0x4[bp],0x07 
029D    EB CA                     jmp         L$40 
029F                          L$44:
029F    3D 0F 00                  cmp         ax,0x000f 
02A2    7E 06                     jle         L$45 
02A4    C6 46 FC 0F               mov         byte ptr -0x4[bp],0x0f 
02A8    EB BF                     jmp         L$40 
02AA                          L$45:
02AA    8A 46 F8                  mov         al,byte ptr -0x8[bp] 
02AD    88 46 FC                  mov         byte ptr -0x4[bp],al 
02B0    EB B7                     jmp         L$40 
02B2                          L$46:
02B2    8B 46 F4                  mov         ax,word ptr -0xc[bp] 
02B5    C9                        leave       
02B6    5F                        pop         di 
02B7    5E                        pop         si 
02B8    C3                        ret         
02B9                          __numout_:
02B9    51                        push        cx 
02BA    56                        push        si 
02BB    57                        push        di 
02BC    C8 06 00 00               enter       0x0006,0x00 
02C0    89 DE                     mov         si,bx 
02C2    C7 46 FA 00 00            mov         word ptr -0x6[bp],0x0000 
02C7    85 DB                     test        bx,bx 
02C9    7D 12                     jge         L$47 
02CB    F7 DE                     neg         si 
02CD    85 D2                     test        dx,dx 
02CF    7D 0C                     jge         L$47 
02D1    C7 46 FA 01 00            mov         word ptr -0x6[bp],0x0001 
02D6    F7 DA                     neg         dx 
02D8    F7 D8                     neg         ax 
02DA    83 DA 00                  sbb         dx,0x0000 
02DD                          L$47:
02DD    89 46 FC                  mov         word ptr -0x4[bp],ax 
02E0    89 56 FE                  mov         word ptr -0x2[bp],dx 
02E3    C4 5E 0A                  les         bx,dword ptr 0xa[bp] 
02E6    26 C6 47 0B 00            mov         byte ptr es:0xb[bx],0x00 
02EB    BF 0A 00                  mov         di,0x000a 
02EE                          L$48:
02EE    89 F3                     mov         bx,si 
02F0    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
02F3    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
02F6    E8 00 00                  call        @remLS 
02F9    30 E4                     xor         ah,ah 
02FB    E8 02 FD                  call        nstring_ 
02FE    89 FB                     mov         bx,di 
0300    4F                        dec         di 
0301    8E 46 0C                  mov         es,word ptr 0xc[bp] 
0304    03 5E 0A                  add         bx,word ptr 0xa[bp] 
0307    26 88 07                  mov         byte ptr es:[bx],al 
030A    89 F3                     mov         bx,si 
030C    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
030F    8B 56 FE                  mov         dx,word ptr -0x2[bp] 
0312    E8 00 00                  call        @divLS 
0315    89 46 FC                  mov         word ptr -0x4[bp],ax 
0318    89 56 FE                  mov         word ptr -0x2[bp],dx 
031B    09 D0                     or          ax,dx 
031D    75 CF                     jne         L$48 
031F    83 7E FA 00               cmp         word ptr -0x6[bp],0x0000 
0323    74 0D                     je          L$49 
0325    89 FE                     mov         si,di 
0327    4F                        dec         di 
0328    8E 46 0C                  mov         es,word ptr 0xc[bp] 
032B    03 76 0A                  add         si,word ptr 0xa[bp] 
032E    26 C6 04 2D               mov         byte ptr es:[si],0x2d 
0332                          L$49:
0332    8D 45 01                  lea         ax,0x1[di] 
0335    03 46 0A                  add         ax,word ptr 0xa[bp] 
0338    8B 56 0C                  mov         dx,word ptr 0xc[bp] 
033B    C9                        leave       
033C    5F                        pop         di 
033D    5E                        pop         si 
033E    59                        pop         cx 
033F    C2 04 00                  ret         0x0004 

Routine Size: 784 bytes,    Routine Base: _TEXT + 0032

No disassembly errors

Segment: CONST WORD USE16 00000000 bytes

Segment: CONST2 WORD USE16 00000000 bytes

Segment: _DATA WORD USE16 00000000 bytes

